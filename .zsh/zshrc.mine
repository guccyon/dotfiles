### Generic Environment ##########################
if [ -e $HOME/bin ]; then
    export PATH=$HOME/bin:$PATH
fi
if [ -e /usr/local/bin ]; then
  export PATH=/usr/local/bin:/usr/local/sbin:$PATH
fi
export EDITOR=vi
export LANG=ja_JP.UTF-8
export EDITOR=vi
export LESS="-R"
export SHELL=/bin/zsh


### Package Specific Environment #################

## HomeBrew
if [ -x "`which brew`" ]; then
  export PATH=$(brew --prefix coreutils)/libexec/gnubin:$PATH
  if [ -d $(brew --prefix)/share/zsh-completions ]; then
    fpath=($(brew --prefix)/share/zsh-completions $fpath)
  fi
  fpath=($(brew --prefix)/share/zsh/site-functions $fpath)
fi

## Direnv
if which direnv > /dev/null; then
  eval "$(direnv hook zsh)"
fi

## Anyenv
if [ -d $HOME/.anyenv ] ; then
  export PATH="$HOME/.anyenv/bin:$PATH"
  eval "$(anyenv init - zsh)"
  for D in `\ls $HOME/.anyenv/envs`
  do
    export PATH="$HOME/.anyenv/envs/$D/shims:$PATH"
  done
fi

## Golang
if [ -x "`which go`" ]; then
  export GOROOT=`go env GOROOT`
  export GOPATH=$HOME
  export PATH=$PATH:$GOROOT/bin
fi

if [ -d ~/node_modules/.bin ]; then
  export PATH=$HOME/node_modules/.bin:$PATH
fi

## haskell
if which stack > /dev/null; then
  alias ghc="stack ghc"
  alias ghci="stack ghci"
  alias runghc="stack runghc"
fi

## Docker
if which docker > /dev/null; then
  eval $(docker-machine env default)
  alias dl='docker ps -l -q'
  alias dui='docker images -q -f dangling=true'
  alias dps='docker ps --format "{{.ID}}\t{{.Image}}\t{{.Status}}\t{{.Command}}\t{{.RunningFor}}"'
  alias dexec='docker exec -it `dps| peco | cut -f 1` bash'
  alias dclogs='docker-compose logs -f'
fi

## Ansible
#if which ansible > /dev/null; then
#  alias ansible-vault-create='ansible-vault --vault-password-file .ansible_vault_key create'
#  alias ansible-vault-edit='ansible-vault --vault-password-file .ansible_vault_key edit'
#fi

## Java
export JAVA_HOME=$(/usr/libexec/java_home)

## tmuxinator
if [ -s $HOME/.tmuxinator/scripts/tmuxinator ]; then
  source $HOME/.tmuxinator/scripts/tmuxinator
fi

## zsh-syntax-highlighting ##################
# if [ -f ~/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]; then
#   source ~/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
# fi

### Options ###############################
setopt nolistbeep
setopt auto_menu
setopt auto_list
setopt auto_param_keys
setopt auto_param_slash
setopt correct
setopt list_types
setopt list_packed
setopt long_list_jobs
setopt interactive_comments
setopt pushd_ignore_dups
setopt print_eight_bit

### Histroy ###############################
[ -f ~/.zsh/zshrc.history ] && source ~/.zsh/zshrc.history

### Functions #############################
for i in ~/.zsh/functions/utils*; do
  source $i
done

# chpwd_functions=(ls_abbrev)

autoload -Uz zmv

### Key Bindings ##########################
bindkey -e
# bindkey '^m' do_enter
bindkey '^r' peco-select-history
# bindkey '^xg' anyframe-widget-cd-ghq-repository
bindkey '^xg' peco-ghq-src
bindkey '^xb' peco-git-branch
bindkey '^xf' peco-find-file

### aliaces specific ##############################
alias vi='/usr/bin/vim'
alias javac='javac -J-Dfile.encoding=UTF-8'
alias java='java -Dfile.encoding=UTF-8'

alias ql='qlmanage -p "$@" >& /dev/null'
alias be='bundle exec'

alias -g BR='`git branch -a | peco --prompt "GIT BRANCH>" | head -n 1 | sed -e "s/^\*\s*//g"`'
alias la="ls -a"
alias lf="ls -F"
alias gd='dirs -v; echo -n "select number: "; read newdir; cd -"$newdir"'
alias grep="egrep --color=always"
alias cp='cp -i'
alias mv='mv -i'
alias rm='rm -i'
alias src='source'
alias diff='colordiff'
alias zmv='noglob zmv -W'
alias ap='ansible-playbook'

